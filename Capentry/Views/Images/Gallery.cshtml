@model IEnumerable<Capentry.Models.Images>
@using Microsoft.AspNet.Identity

<link href="~/Content/CSS/Images.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Gallery";
}

<div class="container-fluid p-0" id="head">
    <h1 class="text-center p-3">Gallery</h1>
</div>

<div class="container" id="Images">
    @* Dropdown filter - no ajax *@
    @*@using (Html.BeginForm("Index", "Images", FormMethod.Get, new { @class = "p-3 filters" }))
        {
            <div class="row g-2 flex-row">
                <div class="col-sm-4 col-md-2 col-lg-2">
                    @Html.DropDownList("ProjectType", (SelectList)ViewBag.ProjectType, "All", new { @class = "form-control form-select btn rounded-0 bi bi-filter", id = "PTypes" })
                </div>
                <div class="col-sm-4 col-md-2 col-lg-2">
                    <input class="btn btn-outline-dark" type="submit" value="Filter" />
                </div>
            </div>
        }*@

    <button class="btn btn-outline-dark filter-btn" type="button" onclick="tabs" data-bs-toggle="collapse" data-bs-target="#filters" aria-expanded="false" aria-controls="filters">
        Filter
    </button>

    <ul class="nav collapse nav-fill gap-2 p-0 m-0 mt-2 justify-content-evenly dont-collapse-sm" id="filters">
        <li class="nav-item">@Html.ActionLink("All", "Gallery", "Images", new { ProjectType = "" }, new { @class = "nav-link btn btn-dark", id = "All" })</li>
        <li class="nav-item">@Html.ActionLink("Kitchens", "Gallery", "Images", new { ProjectType = "Kitchen" }, new { @class = "nav-link btn btn-dark", id = "Kitchen" })</li>
        <li class="nav-item">@Html.ActionLink("Wardrobes", "Gallery", "Images", new { ProjectType = "Wardrobe" }, new { @class = "nav-link btn btn-dark", id = "Wardrobe" })</li>
        <li class="nav-item">@Html.ActionLink("TV Units", "Gallery", "Images", new { ProjectType = "TVUnit" }, new { @class = "nav-link btn btn-dark", id = "TVUnit" })</li>
    </ul>

    @if (Model.FirstOrDefault() != null)
    {
        <div class="row g-3" id="imageData">

            @{
                var counter = 1;

                foreach (var item in Model)
                {

                    <div class="col-sm-5 col-md-4 col-lg-3 item p-2">
                        <a onclick="openModal(); currentSlide(@counter)">
                            <img class="img img-fluid" 
                                 loading="lazy" 
                                 src=@(String.Format("{0}{1}", "https://res.cloudinary.com", item.ImagePath)) 
                                 data-src=@(String.Format("{0}{1}", "https://res.cloudinary.com", item.ImagePath))
                                 alt="@item.ImageName" 
                            />
                        </a>
                    </div>

                    counter = counter + 1;
                }
            }
        </div>
    }
    else
    {
        <h2 class="text-center align-self-center m-5 p-5">There are no images to show yet</h2>
    }
</div>

<div id="myModal" class="modal">
    <div class="container-fluid fixed-top toolbar">
        <div class="d-flex flex-row gap-2">
            <span class="close cursor" onclick="closeModal()">&times;</span>
        </div>
    </div>
    <div class="modal-content">

        @{

            var counterModal = 1;

            foreach (var item in Model)
            {
                <div class="mySlides">
                    <div class="numbertext">@counterModal / @Model.Count()</div>
                    <img id="LImage" loading="lazy" class="img img-fluid" src=@(String.Format("{0}{1}", "https://res.cloudinary.com", item.ImagePath)) alt="" />
                </div>

                counterModal = counterModal + 1;
            }
        }
    </div>

    <!-- Next/previous controls -->
    <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
    <a class="next" onclick="plusSlides(1)">&#10095;</a>
</div>

<script type="text/javascript">
    
</script>

<script type="text/javascript">
    // Open the Modal
    function openModal() {
        document.getElementById("myModal").style.display = "flex";
    }

    // Close the Modal
    function closeModal() {
        document.getElementById("myModal").style.display = "none";
    }

    var slideIndex = 1;
    showSlides(slideIndex);

    // Next/previous controls
    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    // Thumbnail image controls
    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        var i;
        var slides = document.getElementsByClassName("mySlides");
        var dots = document.getElementsByClassName("demo");
        var captionText = document.getElementById("caption");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";
        captionText.innerHTML = dots[slideIndex - 1].alt;
    }
</script>
<script type="text/javascript">
    setTimeout(tabs, 1);
    setTimeout(allTab,2);
    function tabs() {

        if (document.getElementsByClassName('active').length == 0) {
            if ('@ViewBag.CurrentTab' != null || '@ViewBag.CurrentTab' != "") {
                document.getElementById("All").classList.remove('active');
                document.getElementById("@ViewBag.CurrentTab").classList.add('active');
            }
            else if ('@ViewBag.CurrentTab' == null || '@ViewBag.CurrentTab' == ""){
                document.getElementById("All").classList.add('active');
            }
        }
    }
    function allTab() {
        if ('@ViewBag.CurrentTab' == null || '@ViewBag.CurrentTab' == "") {
            document.getElementById("All").classList.add('active');
        }
    }

</script>



