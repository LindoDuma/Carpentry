@model IEnumerable<Capentry.Models.Images>
@using Microsoft.AspNet.Identity

<link href="~/Content/CSS/Images.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid p-0" id="head">
    <h1 class="">Manage Images</h1>
</div>

<div class="container-fluid ps-lg-5 pe-lg-5 p-md-3 p-sm-0" id="Images">

    @* Dropdown filter - no ajax *@

    <div class="filters d-flex flex-lg-row flex-md-row flex-sm-column gap-lg-1 mb-4" id="controls">
        @using (Html.BeginForm("Index", "Images", FormMethod.Get, new { @class = "d-flex gap-2 flex-row align-items-center col-lg-3 col-md-3 col-sm-4" }))
        {
            <h6 class="">Type</h6>
            @Html.DropDownList("ProjectType", (SelectList)ViewBag.ProjectType, "All", new { @class = "form-control form-select btn rounded-0 bi bi-filter", id = "PTypes", onchange = "this.form.submit();" })
        }

        @using (Html.BeginForm("Index", "Images", FormMethod.Get, new { @class = "d-flex gap-2 flex-row align-items-center col-lg-3 col-md-3 col-sm-4" }))
        {
            <h6 class="">Project</h6>
            @Html.DropDownList("ProjectId", (SelectList)ViewBag.ProjectId, "All", new { @class = "form-control form-select btn rounded-0 bi bi-filter", id = "PId", onchange = "this.form.submit();" })
        }
        @Html.ActionLink("  Upload Image", "UploadImage", null, new { @class = "btn btn-dark btn bi bi-upload ms-auto" })
    </div>

    @if (Model.FirstOrDefault() != null)
    {
        <div class="row g-3" id="imageData">

            @{
                foreach (var item in Model)
                {

                    <div class="col-sm-5 col-md-4 col-lg-3 item p-2">
                        <a @*onclick="openModal(); currentSlide(@counter)"*@ href="/Images/Details/@item.ImageID">
                            <img class="img img-fluid lazy"
                                 loading="eager"
                                 src="http://res.cloudinary.com/dfi0awyos/image/upload/c_scale,w_50,q_10/@item.PublicID"
                                 data-src="http://res.cloudinary.com/dfi0awyos/image/upload/c_scale,w_400,q_60/@item.PublicID"
                                 alt="@item.ImageID"
                                 width="500"
                                 height="500" />
                        </a>
                    </div>

                }
            }

        </div>

        <div class="d-flex mt-2 justify-content-center align-items-center">
            <button class="btn btn-dark" id="LoadMore">Load More</button>
        </div>
    }
    else
    {
        <h2 class="text-center align-self-center m-5 p-5">There are no images to show yet</h2>
    }
</div>

@section scripts{ 

<script type="text/javascript">
    setTimeout(tabs, 1);
    setTimeout(allTab,2);
    function tabs() {

        if (document.getElementsByClassName('active').length == 0) {
            if ('@ViewBag.CurrentTab' != null || '@ViewBag.CurrentTab' != "") {
                document.getElementById("All").classList.remove('active');
                document.getElementById("@ViewBag.CurrentTab").classList.add('active');
            }
            else if ('@ViewBag.CurrentTab' == null || '@ViewBag.CurrentTab' == ""){
                document.getElementById("All").classList.add('active');
            }
        }
    }
    function allTab() {
        if ('@ViewBag.CurrentTab' == null || '@ViewBag.CurrentTab' == "") {
            document.getElementById("All").classList.add('active');
        }
    }

</script>

@* Intersection observer script for Lazy Loading images*@
<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        const imageObserver = new IntersectionObserver((entries, imgObserver) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const lazyImage = entry.target
                    console.log("lazy loading ", lazyImage)
                    lazyImage.src = lazyImage.dataset.src
                    lazyImage.classList.remove('opacity-0')
                }
            })

        });
        const arr = document.querySelectorAll('.lazy')
        arr.forEach((v) => {
            imageObserver.observe(v);
        })
    })
</script>

@* Load More functionality *@
<script type="text/javascript">

    var Page = 2;
    var PageSize = 8;

    var typeFilter = document.getElementById('PTypes').value;
    var projectFilter = document.getElementById('PId').value;

    $("#LoadMore").click(function () {

        $.ajax({
            url: "/Images/LoadMore?Page=" + Page + "&PageSize=" + PageSize + "&ProjectType=" + typeFilter + "&ProjectId=" + projectFilter,
            type: 'GET',
            success: function (data) {
                $("#imageData").append(data);
                Page += 1;
            },
            error: function (request, error) {
                console.log(arguments);
                alert(" Can't do because: " + error);
            },
        });
    });
</script>
}

